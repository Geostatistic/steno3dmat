classdef Mesh3DGrid < steno3d.core.UserContent
%MESH3DGRID Mesh for Steno3D Volume resources
%   This mesh provides the geometry for %%%ref[Volume](steno3d.core.Volume) resources. It consists of x,
%   y, and z grid cell widths and an origin point. `Mesh3DGrid` has
%   additional %%%ref[options](steno3d.core.opts.Mesh3DOptions) to customize the appearance of the volume.
%
%   %%%properties
%
%   See the %%%ref[EXAMPLES](steno3d.core.examples.volume)
%
%   %%%seealso STENO3D.CORE.VOLUME, STENO3D.CORE.OPTS.MESH3DOPTIONS
%


    properties (Hidden, SetAccess = immutable)
        M3DProps = {                                                    ...
            struct(                                                     ...
                'Name', 'H1',                                           ...
                'Type', @props.Array,                                   ...
                'Doc', 'Grid cell widths in the x-direction',           ...
                'Shape', {{'*', 1}},                                    ...
                'Binary', false,                                        ...
                'Required', true                                        ...
            ), struct(                                                  ...
                'Name', 'H2',                                           ...
                'Type', @props.Array,                                   ...
                'Doc', 'Grid cell widths in the y-direction',           ...
                'Shape', {{'*', 1}},                                    ...
                'Binary', false,                                        ...
                'Required', true                                        ...
            ), struct(                                                  ...
                'Name', 'H3',                                           ...
                'Type', @props.Array,                                   ...
                'Doc', 'Grid cell widths in the z-direction',           ...
                'Shape', {{'*', 1}},                                    ...
                'Binary', false,                                        ...
                'Required', true                                        ...
            ), struct(                                                  ...
                'Name', 'O',                                            ...
                'Type', @props.Vector,                                  ...
                'Doc', 'Origin point from which axes extend',           ...
                'Required', true                                        ...
            ), struct(                                                  ...
                'Name', 'Opts',                                         ...
                'Type', @props.Instance,                                ...
                'Doc', 'Options for the mesh',                          ...
                'Class', @steno3d.core.opts.Mesh3DOptions,              ...
                'Required', false                                       ...
            )                                                           ...
        }
    end

    methods
        function obj = Mesh3DGrid(varargin)
            obj = obj@steno3d.core.UserContent(varargin{:});
        end
        function n = nN(obj)
            n = (length(obj.H1) + 1) * (length(obj.H2) + 1) *           ...
                (length(obj.H3) + 1);
        end
        function n = nC(obj)
            n = length(obj.H1) * length(obj.H2) * length(obj.H3);
        end
        function n = nbytes(obj)
            n = length(obj.H1)*8 + length(obj.H2)*8 + length(obj.H3)*8;
        end
    end

    methods (Hidden)
        function validator(obj)
            if steno3d.utils.User.isLoggedIn()
                user = steno3d.utils.User.currentUser();
                sz = max([obj.([obj.PROP_PREFIX 'H1']).nbytes           ...
                          obj.([obj.PROP_PREFIX 'H2']).nbytes           ...
                          obj.([obj.PROP_PREFIX 'H3']).nbytes]);
                if sz > user.FileSizeLimit
                    error('steno3d:mesh3DGridError',                    ...
                          ['File size ' num2str(sz) ' bytes exceeds '   ...
                           'file limit of ' num2str(user.FileSizeLimit) ...
                           ' bytes']);
                end
            end
        end

        function args = uploadArgs(obj)
            args = {'tensors', ['{"h1": ' obj.PR_H1.serialize()         ...
                                ', "h2": ' obj.PR_H2.serialize()        ...
                                ', "h3": ' obj.PR_H3.serialize()        ...
                                '}'],                                   ...
                    'OUVZ', ['{"O": ' obj.PR_O.serialize()              ...
                             ', "U": [' num2str(sum(obj.H1)) ', 0, 0]'  ...
                             ', "V": [0, ' num2str(sum(obj.H2)) ', 0]'  ...
                             ', "Z": [0, 0, ' num2str(sum(obj.H3)) ']'  ...
                             '}']};
            args = [args, uploadArgs@steno3d.core.UserContent(obj)];
        end
    end
end

