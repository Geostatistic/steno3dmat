function success = testSteno3D(raiseError, attemptUpload, testPlot)
%TESTSTENO3D Test suite for steno3d

    if nargin < 1
        raiseError = false;
    end
    if nargin < 2
        attemptUpload = false;
    end
    if nargin < 3
        testPlot = true;
    end
    success = true;
    try
        pngfile = [tempname '.png'];
        imwrite([1 2 3; 4 5 6; 7 8 9], pngfile);
        p1 = steno3d.core.Project(                                       ...
            'Title', 'MATLAB Test Project',                             ...
            'Description', 'Just a test',                               ...
            'Public', false                                             ...
        );

        pt = steno3d.core.Point(                                        ...
            'Title', 'Test Points',                                     ...
            'Mesh', steno3d.core.Mesh0D(                                ...
                'Vertices', rand(100, 3)                                ...
            ),                                                          ...
            'Data', {{                                                  ...
                'Location', 'CC', 'Data', {                             ...
                    'Title', 'Rand 1', 'Array', rand(100, 1)            ...
                }                                                       ...
            }, {                                                        ...
                'Location', 'CC', 'Data', {                             ...
                    'Title', 'Rand 2', 'Array', rand(100, 1)            ...
                }                                                       ...
            }},                                                         ...
            'Textures', {                                               ...
                steno3d.core.Texture2DImage(                            ...
                    'Title', 'Temp tex',                                ...
                    'O', [.5 .5 .5],                                    ...
                    'U', [.5 0 0],                                      ...
                    'V', [0 .5 0],                                      ...
                    'Image', pngfile                                    ...
                )                                                       ...
            },                                                          ...
            'Opts', {'Color', 'k'}                                      ...
        );

        li = steno3d.core.Line(                                         ...
            'Title', 'Test Line',                                       ...
            'Description', 'Just a line',                               ...
            'Mesh', {                                                   ...
                'Vertices', rand(100, 3),                               ...
                'Segments', randi(100, [50, 2]),                        ...
                'Opts', {'View_Type', 'line'}                           ...
            },                                                          ...
            'Data', {{                                                  ...
                'Location', 'CC', 'Data', {                             ...
                    'Title', 'Rand 1', 'Array', rand(50, 1)             ...
                }                                                       ...
            }, {                                                        ...
                'Location', 'N', 'Data', {                              ...
                    'Title', 'Rand 2', 'Array', rand(100, 1)            ...
                }                                                       ...
            }},                                                         ...
            'Opts', {'Opacity', .5, 'Color', 'r'}                       ...
        );

        s1 = steno3d.core.Surface(                                      ...
            'Title', 'Test Grid Surface',                               ...
            'Mesh', {'H1', randi(5, 3, 1),                              ...
                     'H2', randi(5, 4, 1),                              ...
                     'O', [0 0 5],                                      ...
                     'U', [1 0 0],                                      ...
                     'V', [-.05 1 0],                                   ...
                     'Z', rand(20, 1),                                  ...
                     'Opts', {'Wireframe', true}},                      ...
            'Data', {{                                                  ...
                'Location', 'CC', 'Data', {                             ...
                    'Title', 'Rand 1', 'Array', rand(12, 1)             ...
                }                                                       ...
            }, {                                                        ...
                'Location', 'N', 'Data', {                              ...
                    'Title', 'Rand 2', 'Array', rand(20, 1)             ...
                }                                                       ...
            }},                                                         ...
            'Textures', steno3d.core.Texture2DImage(                    ...
                'Title', 'Temp tex',                                    ...
                'O', [.5 .5 .5],                                        ...
                'U', [.5 0 0],                                          ...
                'V', [0 .5 0],                                          ...
                'Image', pngfile                                        ...
            ),                                                          ...
            'Opts', {'Opacity', .5, 'Color', 'r'}                       ...
        );

        s2 = steno3d.core.Surface(                                      ...
            'Title', 'Test Tri Surface',                                ...
            'Mesh', steno3d.core.Mesh2D(                                ...
                'Vertices', rand(100, 3),                               ...
                'Triangles', randi(100, [50, 3]),                       ...
                'Opts', steno3d.core.opts.Mesh2DOptions(                ...
                    'Wireframe', false                                  ...
                )                                                       ...
            ),                                                          ...
            'Data', {steno3d.core.binders.SurfaceBinder(                ...
                'Location', 'CC', 'Data', steno3d.core.DataArray(       ...
                    'Title', 'Rand 1', 'Array', rand(50, 1)             ...
                )                                                       ...
            ), steno3d.core.binders.SurfaceBinder(                      ...
                'Location', 'N', 'Data', steno3d.core.DataArray(        ...
                    'Title', 'Rand 2', 'Array', rand(100, 1)            ...
                )                                                       ...
            )},                                                         ...
            'Textures', steno3d.core.Texture2DImage(                    ...
                'Title', 'Temp tex',                                    ...
                'O', [.5 .5 .5],                                        ...
                'U', [.5 0 0],                                          ...
                'V', [0 .5 0],                                          ...
                'Image', pngfile                                        ...
            ),                                                          ...
            'Opts', steno3d.core.opts.SurfaceOptions(                   ...
                'Opacity', .5, 'Color', 'r'                             ...
            )                                                           ...
        );

        vo = steno3d.core.Volume(                                       ...
            'Title', 'Test Volume',                                     ...
            'Description', 'Just a volume',                             ...
            'Mesh', steno3d.core.Mesh3DGrid(                            ...
                'H1', randi(5, 3, 1),                                   ...
                'H2', randi(5, 4, 1),                                   ...
                'H3', randi(5, 5, 1),                                   ...
                'O', [5 5 10]                                           ...
            ),                                                          ...
            'Data', {                                                   ...
                'Data', rand(60, 1)                                     ...
            },                                                          ...
            'Opts', {'Color', [.2 .2 .5]}                               ...
        );

        p1.Resources = {pt, li, s1, s2, vo};

        p1.validate;
        
        if testPlot
            p1.plot;
            p2 = steno3d.convert(gcf);
            close;
            x = 0:pi/10:4*pi;
            [p3, myLine] = steno3d.line(                                ...
                x, cos(x), sin(x), 'k',                                 ...
                'Random Vert Data', rand(size(x)),                      ...
                'Random Seg Data', rand(length(x)-1, 1)                 ...
            );
            myLine.Title = 'Example Line';
            myLine.Description = 'Trig functions with random data';
            p3.Title = 'Project with one Line';
            p3.Public = false;
            
            x = 0:pi/10:4*pi;
            [p4, myPoints] = STENO3D.SCATTER(                        ...
                [x(:) cos(x(:)+0.2) sin(x(:))], [0 .5 .5],                  ...
                'Random Data', rand(size(x))                                ...
            );
            myPoints.Title = 'Example Points';
            myPoints.Description = 'Trig functions with random data';
            p4.Title = 'Project with one set of Points';
            p4.Public = false;
            
            x = [0 1 0 0]; y = [0 0 1 0]; z = [0 0 0 1];
            tris = convhull(x, y, z);
            [p5, mySurface] = STENO3D.TRISURF(                       ...
                tris, x, y, z, 'r', 'Face Data', rand(4, 1)                 ...
            );
            mySurface.Title = 'Triangulated Surface';
            mySurface.Description = 'Convex hull triangles';
            p5.Title = 'Project with one Surface';
            p5.Public = true;
            steno3d.upload(p5)
        end
        
        if attemptUpload
            steno3d.login;
            p1.upload;
            p2.upload;
            p3.upload;
            steno3d.upload(p4);
            p5.upload();
        end

    catch ME
        success = false;
        if raiseError
            rethrow(ME);
        end
    end

end

