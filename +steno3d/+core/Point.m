classdef Point < steno3d.core.CompositeResource
%POINT Low-level Steno3D Point resource
%   Points are 0D resources. Their geometry is defined by a <a href="
%   matlab: help steno3d.core.Mesh0D">Mesh0D</a> with
%   Vertices. They may have <a href="matlab: help steno3d.core.DataArray
%   ">Data</a> defined on the vertices (nodes). There are
%   several <a href="matlab: help steno3d.core.opts.PointOptions
%   ">point options</a> available for customizing the appearance.
%
%   POINT resources can also be created through a high-level functional
%   interface with <a href="matlab: help steno3d.scatter
%   ">steno3d.scatter</a>.
%   
%   For a demonstration of POINT, see the <a href="
%   matlab: help steno3d.examples.point">EXAMPLES</a>.
%
%   POINT implements <a href="matlab: help props.HasProps
%   ">HasProps</a> for dynamic, type-checked <a href="matlab:
%   help props.Prop">properties</a>
%
%   REQUIRED PROPERTIES:
%       Mesh (<a href="matlab: help props.Instance">props.Instance</a>)
%           Structure of the point resource
%           Class: <a href="matlab: help steno3d.core.Mesh0D
%           ">Mesh0D</a>
%
%   OPTIONAL PROPERTIES:
%       Data (<a href="matlab: help props.Repeated">props.Repeated</a>)
%           Data defined on the point resource
%           Type: props.Instance (Class: <a href="matlab:
%           help steno3d.core.binders
%           ">PointBinder</a>)
%
%       Textures (<a href="matlab: help props.Repeated">props.Repeated</a>)
%           Images mapped to the point resource
%           Type: props.Instance (Class: <a href="matlab:
%           help steno3d.core.Texture2DImage
%           ">Texture2DImage</a>)
%
%       Opts (<a href="matlab: help props.Instance">props.Instance</a>)
%           Options for the point resource
%           Class: <a href="matlab: help steno3d.core.opts.PointOptions
%           ">PointOptions</a>
%
%       Title (<a href="matlab: help props.String">props.String</a>)
%           Content title
%
%       Description (<a href="matlab: help props.String">props.String</a>)
%           Content description
%
%   See also steno3d.examples.point, steno3d.scatter, steno3d.core.Mesh0D,
%   steno3d.core.opts.PointOptions, steno3d.core.binders,
%   steno3d.core.CompositeResource, steno3d.core.Project
%


    properties (Hidden, SetAccess = immutable)
        PointProps = {                                                  ...
            struct(                                                     ...
                'Name', 'Mesh',                                         ...
                'Type', @props.Instance,                                ...
                'Doc', 'Structure of the point resource',               ...
                'Class', @steno3d.core.Mesh0D,                          ...
                'Required', true                                        ...
            ), struct(                                                  ...
                'Name', 'Data',                                         ...
                'Type', @props.Repeated,                                ...
                'Doc', 'Data defined on the point resource',            ...
                'PropType', struct(                                     ...
                    'Type', @props.Instance,                            ...
                    'Class', @steno3d.core.binders.PointBinder,         ...
                    'Initialize', false                                 ...
                ),                                                      ...
                'Required', false                                       ...
            ), struct(                                                  ...
                'Name', 'Textures',                                     ...
                'Type', @props.Repeated,                                ...
                'Doc', 'Images mapped to the point resource',           ...
                'PropType', struct(                                     ...
                    'Type', @props.Instance,                            ...
                    'Class', @steno3d.core.Texture2DImage,              ...
                    'Initialize', false                                 ...
                ),                                                      ...
                'Required', false                                       ...
            ), struct(                                                  ...
                'Name', 'Opts',                                         ...
                'Type', @props.Instance,                                ...
                'Doc', 'Options for the point resource',                ...
                'Class', @steno3d.core.opts.PointOptions,               ...
                'Required', false                                       ...
            )                                                           ...
        }
    end

    methods
        function obj = Point(varargin)
            obj = obj@steno3d.core.CompositeResource(varargin{:});
        end
    end

    methods (Hidden)
        function plot(obj, ax)
            if ~isempty(obj.Data)
                scatter3(ax, obj.Mesh.Vertices(:, 1),                   ...
                         obj.Mesh.Vertices(:, 2),                       ...
                         obj.Mesh.Vertices(:, 3), [],                   ...
                         obj.Data{1}.Data.Array(:), 'filled',           ...
                         'MarkerFaceAlpha', obj.Opts.Opacity);
            else
                scatter3(ax, obj.Mesh.Vertices(:, 1),                   ...
                         obj.Mesh.Vertices(:, 2),                       ...
                         obj.Mesh.Vertices(:, 3), [],                   ...
                         obj.Opts.Color/255, 'filled',                  ...
                         'MarkerFaceAlpha', obj.Opts.Opacity);
            end
        end
    end
end

