function res = patch(ph)
%PATCH Summary of this function goes here
%   Detailed explanation goes here
    if ~isgraphics(ph) || ~strcmp(ph.Type, 'patch')
        error('steno3d:convertError', ['steno3d.utils.covnert.patch '       ...
              'requires graphics input of type "patch"']);
    end

    res = {};
    if isempty(ph.Vertices)
        xd = ph.XData;
        yd = ph.YData;
        zd = ph.ZData;
        if isempty(zd)
            zd = zeros(size(xd));
        end
        vert = [xd(:) yd(:) zd(:)];
        faces = 1:length(xd);
        faces = reshape(faces, size(xd))';
    else
        vert = ph.Vertices;
        if shape(vert, 2) == 2
            vert = [vert zeros(shape(vert,1), 1)];
        end
        faces = ph.Faces;
    end
    
    color = 'random';
    cd = ph.FaceVertexCData;
    if shape(cd, 1) == 1
        color = cd;
    elseif shape(cd, 2) == 3
        cd = mean(cd, 2);
    end
    
    if length(cd) == shape(faces, 1) && shape(faces, 2) > 3
        cd = repmat(cd, 1, shape(faces, 2)-2)';
        cd = cd(:);
    elseif strcmp(ph.FaceColor, 'flat') && length(cd) == shape(vert, 1)
        cd = cd(faces(:, 1));
    end
    
    if shape(faces, 2) > 3
        new_faces = zeros(shape(faces, 1)*(shape(faces, 2)-2), 3);
        for i = 1:shape(faces, 1)
            new_faces((i-1)*shape(faces, 1), :) = [                         ...
                faces(i, 1)*ones(shape(faces, 2)-2)                         ...
                faces(i, 2:end-1)'                                        ...
                faces(i, 3:end)'                                          ...
            ];
        end
        faces = new_faces;
    end
    
    if strcmp(ph.FaceColor, 'flat')
        assert(length(cd) == size(faces, 1));
        location = 'CC';
    else
        assert(length(cd) == size(vert, 1));
        location = 'N';
    end

    if strcmp(ph.EdgeColor, 'none')
        mesh.Opts.Wireframe = false;
    end

    if ~any(strcmp(ph.FaceColor, {'flat', 'interp', 'none'}))
        color = ph.FaceColor;
    end

    if any(strcmp(ph.FaceAlpha, {'flat', 'interp'}))
        alpha = 1;
    else
        alpha = ph.FaceAlpha;
    end
    
    if ~strcmp(ph.EdgeColor, 'none') || ~strcmp(ph.FaceColor, 'none')
        if shape(faces, 2) == 3
            res = [res {                                                    ...
                steno3d.core.Surface(                                       ...
                    'Title', ph.DisplayName,                                ...
                    'Mesh', steno3d.core.Mesh2D(                                     ...
                        'Vertices', vert,                                       ...
                        'Triangles', faces                                      ...
                    ),                                           ...
                    'Data', {                                               ...
                        'Location', location,                               ...
                        'Data', cd(:)                                   ...
                    },                                                      ...
                    'Opts', {                                               ...
                        'Color', color,                                     ...
                        'Opacity', alpha                                    ...
                    }                                                       ...
                )                                                           ...
            }];
        elseif shape(faces, 2) == 2
            res = [res {                                                    ...
                steno3d.core.Surface(                                       ...
                    'Title', ph.DisplayName,                                ...
                    'Mesh', steno3d.core.Mesh1D(                                     ...
                        'Vertices', vert,                                       ...
                        'Segments', faces                                      ...
                    ),                                           ...
                    'Data', {                                               ...
                        'Location', location,                               ...
                        'Data', cd(:)                                   ...
                    },                                                      ...
                    'Opts', {                                               ...
                        'Color', color,                                     ...
                        'Opacity', alpha                                    ...
                    }                                                       ...
                )                                                           ...
            }];
        else
            res = [res {                                                    ...
                steno3d.core.Points(                                       ...
                    'Title', ph.DisplayName,                                ...
                    'Mesh', steno3d.core.Mesh0D(                                     ...
                        'Vertices', vert(faces, :)                              ...
                    ),                                          ...
                    'Data', {                                               ...
                        'Location', location,                               ...
                        'Data', cd(:)                                   ...
                    },                                                      ...
                    'Opts', {                                               ...
                        'Color', color,                                     ...
                        'Opacity', alpha                                    ...
                    }                                                       ...
                )                                                           ...
            }];
    end




    if strcmp(ph.MarkerFaceColor, 'none')
        mcol = ph.MarkerEdgeColor;
    else
        mcol = ph.MarkerFaceColor;
    end
    if strcmp(mcol, 'auto')
        mcol = 'random';
    end
    if ~strcmp(ph.Marker, 'none') && ~strcmp(mcol, 'none')
        res = [res {                                                    ...
            steno3d.core.Point(                                         ...
                'Title', ph.DisplayName,                                ...
                'Mesh', steno3d.core.Mesh0D(                            ...
                    'Vertices', vert                       ...
                ),                                            ...
                'Opts', {'Color', mcol}                                 ...
            )                                                           ...
        }];
    end




end

