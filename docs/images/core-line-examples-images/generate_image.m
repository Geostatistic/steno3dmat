
steno3d.login;

lin = steno3d.core.Line(                                     ...
    'Title', 'Example 4 Line',                               ...
    'Description', 'This Line resource will have data',      ...
    'Mesh', {'Vertices', [0:30; sin(0:30); cos(0:30)]',      ...
             'Segments', [1:30; 2:31]',                      ...
             'Opts', {'ViewType', 'tube'}},                  ...
    'Opts', {'Color', 'y', 'Opacity', 0.75},                 ...
    'Data', {{                                               ...
        'Location', 'CC',                                    ...
        'Data', {                                            ...
            'Title', 'CC Sine Data', 'Array', cos(.5:29.5)'  ...
        }                                                    ...
    }, {                                                     ...
        'Location', 'N',                                     ...
        'Data', {                                            ...
            'Title', 'Node Cosine Data', 'Array', cos(0:30)' ...
        }                                                    ...
    }}                                                       ...
);
example4 = steno3d.core.Project(                             ...
    'Title', 'Example 4',                                    ...
    'Description', 'Project with a line',                    ...
    'Resources', lin                                         ...
);
example4.plot;
clear lin;


% xlim([0 100])
% ylim([0 100])
% zlim([-8 8])
ax = gca;
ax.FontWeight = 'bold';
ax.FontSize = 12;
ax.LineWidth = 1.5;
ax.XGrid = 'on';
ax.YGrid = 'on';
ax.ZGrid = 'on';
ax.XLabel.String = 'X axis';
ax.XLabel.FontSize = 14;
ax.YLabel.String = 'Y axis';
ax.YLabel.FontSize = 14;
ax.ZLabel.String = 'Z axis';
ax.ZLabel.FontSize = 14;
ax.Color = [1 1 1];
ax.TickLength = [0.02 0.02];
ax.Box = 'on';
legend('hide')
% xticks([0 5 10 15 20])
campos([44.1127  -12.0908   10.8531])
print('-dpng','-r500','image')

example4.upload();


